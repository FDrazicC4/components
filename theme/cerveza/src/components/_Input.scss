@use 'sass:map';
@use '../utilities';

// ==============================================
// General Input styles
// ==============================================

// -------------------------------------
// Labels

.brew-Input__label {
    color: utilities.color(grey, 500);
}

// ==============================================
// Text Input
// ==============================================
.brew-Input--textInput {
    $radius: map.get(utilities.$inputs, border-radius);

    @mixin modifyBefore($direction) {
        border-#{$direction}: none;
        border-top-#{$direction}-radius: 0;
        border-bottom-#{$direction}-radius: 0;
    }

    @mixin beforeAfter($type) {
        $outsideDirection: if($type == 'before', 'left', 'right');
        $insideDirection: if($outsideDirection == 'left', 'right', 'left');

        display: flex;
        height: 100%;
        align-items: center;
        border: 1px solid utilities.color(grey, 100);
        border-#{$insideDirection}: none;
        padding: utilities.size(normal);
        padding-#{$insideDirection}: 0;
        border-top-#{$outsideDirection}-radius: $radius;
        border-bottom-#{$outsideDirection}-radius: $radius;
    }

    display: inline-flex;
	align-items: center;
	width: 100%;
	max-width: map.get(utilities.$inputs, width);
	box-sizing: border-box;

	&, * {
		box-sizing: border-box;
    }

    .brew-Input {

        &__before {
            @include beforeAfter('before');
        }

        &__after {
            @include beforeAfter('after');
        }

        &__element {
            font-size: utilities.size(normal);
            font-weight: normal;
            padding: utilities.size(small);
            border-radius: $radius;
            border: 1px solid utilities.color(grey, 100);
            box-sizing: border-box;
            flex-grow: 1;

            &:active,
            &:focus {
                border-color: utilities.color(brand, primary);
                outline: none;
            }
        }
    }

    &.brew-Input--hasBefore {
        .brew-Input__element {
            @include modifyBefore('left');
        }
    }

    &.brew-Input--hasAfter {
        .brew-Input__element {
            @include modifyBefore('right');
        }
    }

    &.brew-Input--hasError {

        .brew-Input {
            &__element,
            &__before,
            &__after {
                border-color: utilities.color(accent, danger);
            }
        }
    }

    &.brew-Input--isFullWidth {
        max-width: initial;
    }

    &.brew-Input--isDisabled {

        .brew-Input {
            &__element,
            &__before,
            &__after {
                background-color: utilities.color(grey, 100);
                border-color: utilities.color(grey, 100);
            }
        }
    }

}


// ==============================================
// Textarea
// ==============================================
.brew-Input--textarea {
    display: inline-flex;
    width: 100%;
    max-width: map.get(utilities.$inputs, width);

    @mixin appendStyles($type) {
        $direction: if($type == 'before', 'left', 'right');
        border-#{$direction}: none;
        border-top-#{$direction}-radius: 0;
        border-bottom-#{$direction}-radius: 0;
    }

    @mixin beforeAfterStyles($type) {
        $direction: if($type == 'before', 'left', 'right');
        $oppositeDirection: if($direction == 'left', 'right', 'left');

        padding: utilities.size(normal);
        border: 1px solid utilities.color(grey, 100);
        display: flex;
        align-items: center;
        padding-#{$oppositeDirection}: 0;
        border-#{$oppositeDirection}: none;
        border-top-#{$direction}-radius: utilities.$border-radius;
        border-bottom-#{$direction}-radius: utilities.$border-radius;
    }

    .brew-Input {

        &__before {
            @include beforeAfterStyles('before');
        }

        &__after {
            @include beforeAfterStyles('after');
        }

        &__element {
            flex-grow: 1;
            font-size: 1rem;
            color: utilities.color(grey, 800);
            padding: utilities.size(normal);
            border: 1px solid utilities.color(grey, 100);
            border-radius: utilities.$border-radius;
            box-sizing: border-box;

            &:active,
            &:focus {
                outline: none;
                border-color: utilities.color(brand, primary);

                &.isDisabled {
                    border-color: utilities.color(grey, 100);
                }
            }
        }
    }

    &.brew-Input--hasBefore {

        .brew-Input__element {
            @include appendStyles('before');
        }
    }

    &.brew-Input--hasAfter {

        .brew-Input__element {
            @include appendStyles('after');
        }
    }

    &.brew-Input--hasError {

        .brew-Input {
            &__element,
            &__before,
            &__after {
                border-color: utilities.color(accent, danger);
            }
        }
    }

    &.brew-Input--isDisabled {

        .brew-Input {
            &__element,
            &__before,
            &__after {
                border-color: utilities.color(grey, 100);
                background-color: utilities.color(grey, 100);
            }
        }

    }

    &.brew-Input--isFullWidth {
        max-width: initial;
    }

}
