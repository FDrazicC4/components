@use 'sass:color';
@use '../utilities';


// ==============================================
// Variables
// ==============================================

$colors: (
    primary: utilities.color(brand, primary),
    secondary: utilities.color(brand, secondary),
    success: utilities.color(accent, success),
    danger: utilities.color(accent, danger),
    warning: utilities.color(accent, warning),
    info: utilities.color(accent, info),
    dark: utilities.color(accent, dark),
    light: utilities.color(accent, light),
);


// ==============================================
// Colors
// ==============================================

$color-variants: primary, secondary, success, info, warning, danger, light, dark;

@mixin color-styles($colorName) {
    $progress-color: map_get($colors, $colorName);
    $transparent-color: color.scale($progress-color, $lightness: 75%);

    .brew-ProgressCircular--color-#{$colorName} {
        color: $progress-color;
    }

    .brew-ProgressLinear--color-#{$colorName} {

        &:not(.brew-ProgressLinear--variant-buffer) {
            background-color: $transparent-color;
        }

        .brew-ProgressLinear__bar {
            background-color: $progress-color;
        }

        .brew-ProgressLinear__bufferBar {
            background-color: $transparent-color;
        }

        .brew-ProgressLinear__dashedBar {
            background-image: radial-gradient($transparent-color 0%, $transparent-color 16%, transparent 42%)
        }

    }

}

// ==============================================
// General
// ==============================================

@each $color in $color-variants {
    @include color-styles($color);
}


// ==============================================
// Sizes
// ==============================================

.brew-ProgressCircular {

    &--size-inherit {
        width: 1em !important;
        height: 1em !important;
    }

    &--size-small {
        width: utilities.size(small) * 1.5 !important;
        height: utilities.size(small) * 1.5 !important;
    }

    &--size-medium {
        width: utilities.size(normal) * 1.5 !important;
        height: utilities.size(normal) * 1.5 !important;
    }

    &--size-large {
        width: utilities.size(large) * 1.5 !important;
        height: utilities.size(large) * 1.5 !important;
    }

}


.brew-ProgressLinear {

    &--size-inherit {
        height: 1em * 0.25;
    }

    &--size-small {
        height: utilities.size(small) * 0.25;
    }

    &--size-medium {
        height: utilities.size(normal) * 0.5;
    }

    &--size-large {
        height: utilities.size(large) * 0.75;
    }

}
